<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xzy.SK.Api</name>
    </assembly>
    <members>
        <member name="M:Xzy.SK.Api.Controllers.KM.KMDemoController.Test(System.String)">
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.FunCoreDemoController.ConversationSummary">
            <summary>
            会话总结，标签提取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MemoryStoreController.MemoryStore(System.String)">
            <summary>
            查询向量
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MemoryStoreController.TextMemory1">
             <summary>
             第1部分：使用ISemanticTextMemory（textMemory）对象存储和检索内存。
            这是一种从代码角度存储内存的简单方法，无需使用内核。
             </summary>
             <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MemoryStoreController.TextMemory2">
             <summary>
            第2部分：创建TextMemoryPlugin，通过内核存储和检索内存。
            这使得语义功能和人工智能（通过规划者）能够访问记忆
             </summary>
             <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MemoryStoreController.TextMemory3">
             <summary>
            第三部分：用语义搜索回忆相似的想法
            使用AI嵌入基于意图而非特定密钥对内存进行模糊查找。
             </summary>
             <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MemoryStoreController.TextMemory4">
             <summary>
            TextMemoryPugin在语义函数中的回忆
            渲染提示模板时查找相关内存，然后将渲染的提示发送到
            用于回答自然语言查询的文本完成模型。
             </summary>
             <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.MsgContextController.Test">
            <summary>
            聊天上下文
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xzy.SK.Api.Controllers.SKDemoController">
            <summary>
            SKDemo示例
            </summary>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Translate(System.String,System.String)">
            <summary>
            测试Plugins翻译
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Calculate(System.String,System.String)">
            <summary>
            测试Plugins计算
            </summary>
            <param name="num1"></param>
            <param name="num2"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Native(System.String,System.String)">
            <summary>
            原生函数测试
            </summary>
            <param name="num1"></param>
            <param name="num2"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Nested(System.String,System.String)">
            <summary>
            嵌套函数
            </summary>
            <param name="num1"></param>
            <param name="num2"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.NativeNested(System.String)">
            <summary>
            原生嵌套，通过自然语义先找到最大和最小的2个值，然后用最大值减去最小值得到结果返回
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Plan(System.String)">
            <summary>
            计划
            </summary>
            <param name="msg">小明有7个冰淇淋，我有2个冰淇淋，他比我多几个冰淇淋？</param>
            <param name="msg">小明有7个冰淇淋，我有2个冰淇淋，我们一共有几个冰淇淋？</param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Intent(System.String)">
            <summary>
            意图识别
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.SKDemoController.Pipeline">
            <summary>
            管道
            https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins/out-of-the-box-plugins?tabs=Csharp#whats-the-ms-graph-connector-kit
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.Controllers.TextChunkController.Test">
            <summary>
            文本分块
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.plugins.MathPlugin.MathSK.Negative(System.String)">
            <summary>
            得到负数
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Api.plugins.MathPlugin.MathSK.Subtraction(System.Int32,System.Int32)">
            <summary>
            两个数相减
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Xzy.SK.Api.plugins.UtilsPlugin._kernel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xzy.SK.Program.GetAppSettings">
            <summary>
            初始化配置文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xzy.SK.Startup.InitValidation(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            初始化模型验证
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Xzy.SK.Startup.InitSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            初始化swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Xzy.SK.Startup.InitConfig">
            <summary>
            注入配置文件
            </summary>
        </member>
    </members>
</doc>
